    1 #! /usr/bin/env python
    2 #  -*- coding: utf-8 -*-
    3 #
    4 # GUI module generated by PAGE version 6.2
    5 #  in conjunction with Tcl version 8.6
    6 #    May 14, 2022 07:38:25 PM EEST  platform: Windows NT
    7 
    8 import sys
    9 
   10 try:
   11     import Tkinter as tk
   12 except ImportError:
   13     import tkinter as tk
   14 
   15 try:
   16     import ttk
   17     py3 = False
   18 except ImportError:
   19     import tkinter.ttk as ttk
   20     py3 = True
   21 
   22 import freehosters_support
   23 
   24 def vp_start_gui():
   25     '''Starting point when module is the main routine.'''
   26     global val, w, root
   27     root = tk.Tk()
   28     freehosters_support.set_Tk_var()
   29     top = Toplevel1 (root)
   30     freehosters_support.init(root, top)
   31     root.mainloop()
   32 
   33 w = None
   34 def create_Toplevel1(rt, *args, **kwargs):
   35     '''Starting point when module is imported by another module.
   36        Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
   37     global w, w_win, root
   38     #rt = root
   39     root = rt
   40     w = tk.Toplevel (root)
   41     freehosters_support.set_Tk_var()
   42     top = Toplevel1 (w)
   43     freehosters_support.init(w, top, *args, **kwargs)
   44     return (w, top)
   45 
   46 def destroy_Toplevel1():
   47     global w
   48     w.destroy()
   49     w = None
   50 
   51 class Toplevel1:
   52     def __init__(self, top=None):
   53         '''This class configures and populates the toplevel window.
   54            top is the toplevel containing window.'''
   55         _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
   56         _fgcolor = '#000000'  # X11 color: 'black'
   57         _compcolor = '#d9d9d9' # X11 color: 'gray85'
   58         _ana1color = '#d9d9d9' # X11 color: 'gray85'
   59         _ana2color = '#ececec' # Closest X11 color: 'gray92'
   60         self.style = ttk.Style()
   61         if sys.platform == "win32":
   62             self.style.theme_use('winnative')
   63         self.style.configure('.',background=_bgcolor)
   64         self.style.configure('.',foreground=_fgcolor)
   65         self.style.configure('.',font="TkDefaultFont")
   66         self.style.map('.',background=
   67             [('selected', _compcolor), ('active',_ana2color)])
   68 
   69         top.geometry("600x450+383+106")
   70         top.minsize(120, 1)
   71         top.maxsize(1370, 749)
   72         top.resizable(1,  1)
   73         top.title("New Toplevel")
   74         top.configure(background="#d9d9d9")
   75 
   76         self.Checkbutton1 = tk.Checkbutton(top)
   77         self.Checkbutton1.place(relx=0.233, rely=0.489, relheight=0.056
   78                 , relwidth=0.102)
   79         self.Checkbutton1.configure(activebackground="#ececec")
   80         self.Checkbutton1.configure(activeforeground="#000000")
   81         self.Checkbutton1.configure(background="#d9d9d9")
   82         self.Checkbutton1.configure(disabledforeground="#a3a3a3")
   83         self.Checkbutton1.configure(foreground="#000000")
   84         self.Checkbutton1.configure(highlightbackground="#d9d9d9")
   85         self.Checkbutton1.configure(highlightcolor="black")
   86         self.Checkbutton1.configure(justify='left')
   87         self.Checkbutton1.configure(text='''000webhost''')
   88         self.Checkbutton1.configure(variable=freehosters_support.che45)
   89 
   90         self.nnn = tk.Checkbutton(top)
   91         self.nnn.place(relx=0.233, rely=0.556, relheight=0.056, relwidth=0.102)
   92         self.nnn.configure(activebackground="#ececec")
   93         self.nnn.configure(activeforeground="#000000")
   94         self.nnn.configure(background="#d9d9d9")
   95         self.nnn.configure(disabledforeground="#a3a3a3")
   96         self.nnn.configure(foreground="#000000")
   97         self.nnn.configure(highlightbackground="#d9d9d9")
   98         self.nnn.configure(highlightcolor="black")
   99         self.nnn.configure(justify='left')
  100         self.nnn.configure(text='''Profreehost''')
  101         self.nnn.configure(variable=freehosters_support.che46)
  102 
  103         self.style.configure('TNotebook.Tab', background=_bgcolor)
  104         self.style.configure('TNotebook.Tab', foreground=_fgcolor)
  105         self.style.map('TNotebook.Tab', background=
  106             [('selected', _compcolor), ('active',_ana2color)])
  107         self.TNotebook1 = ttk.Notebook(top)
  108         self.TNotebook1.place(relx=0.383, rely=0.111, relheight=0.902
  109                 , relwidth=0.64)
  110         self.TNotebook1.configure(takefocus="")
  111         self.TNotebook1_t1 = tk.Frame(self.TNotebook1)
  112         self.TNotebook1.add(self.TNotebook1_t1, padding=3)
  113         self.TNotebook1.tab(0, text="Page 1",compound="left",underline="-1",)
  114         self.TNotebook1_t1.configure(background="#d9d9d9")
  115         self.TNotebook1_t1.configure(highlightbackground="#d9d9d9")
  116         self.TNotebook1_t1.configure(highlightcolor="black")
  117         self.TNotebook1_t2 = tk.Frame(self.TNotebook1)
  118         self.TNotebook1.add(self.TNotebook1_t2, padding=3)
  119         self.TNotebook1.tab(1, text="Page 2",compound="left",underline="-1",)
  120         self.TNotebook1_t2.configure(background="#d9d9d9")
  121         self.TNotebook1_t2.configure(highlightbackground="#d9d9d9")
  122         self.TNotebook1_t2.configure(highlightcolor="black")
  123 
  124         self.Button1 = tk.Button(top)
  125         self.Button1.place(relx=0.2, rely=0.867, height=24, width=47)
  126         self.Button1.configure(activebackground="#ececec")
  127         self.Button1.configure(activeforeground="#000000")
  128         self.Button1.configure(background="#d9d9d9")
  129         self.Button1.configure(disabledforeground="#a3a3a3")
  130         self.Button1.configure(foreground="#000000")
  131         self.Button1.configure(highlightbackground="#d9d9d9")
  132         self.Button1.configure(highlightcolor="black")
  133         self.Button1.configure(pady="0")
  134         self.Button1.configure(text='''OK''')
  135 
  136 if __name__ == '__main__':
  137     vp_start_gui()
  138 
  139 

